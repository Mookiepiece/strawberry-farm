@use 'sass:list';
@use 'sass:meta';

@function _LT_($i) {
  @return '.\\\\\\\{' + $i + '\\\}';
}
@function _T_($i) {
  @return '.\\\\\\\{' + $i + '\\\}\\\/';
}
@function _RT_($i) {
  @return '.\\\{' + $i + '\\\}\\\/';
}
@function _L_($i) {
  @return '.\\\-\\\{' + $i + '\\\}';
}
@function _C_($i) {
  @return '.\\\{' + $i + '\\\}';
}
@function _R_($i) {
  @return '.\\\{' + $i + '\\\}\\\-';
}
@function _LB_($i) {
  @return '.\\\/\\\{' + $i + '\\\}';
}
@function _B_($i) {
  @return '.\\\/\\\{' + $i + '\\\}\\\\';
}
@function _RB_($i) {
  @return '.\\\{' + $i + '\\\}\\\\';
}

$directions: (_LT_, _T_, _RT_, _L_, _C_, _R_, _LB_, _B_, _RB_);

$positions: (
  '\\\+': relative,
  '\\\*': absolute,
  '\\\&': sticky,
  '\\\.': fixed,
);

@function _ONE_POS_($p, $fns) {
  $ans: '';
  @each $f in $fns {
    @if $ans != '' {
      $ans: $ans + ', ';
    }
    $ans: $ans + meta.call(get-function($f), $p);
  }
  @return $ans;
}

@function _EACH_POS_($fns) {
  $ans: '';
  @each $p, $_ in $positions {
    @if $ans != '' {
      $ans: $ans + ', ';
    }
    $ans: $ans + _ONE_POS_($p, $fns);
  }
  @return $ans;
}

#{_EACH_POS_($directions)} {
  --x: 0px;
  --y: 0px;
  --xy: 0px;
}
@each $p, $_ in $positions {
  #{_ONE_POS_($p, $directions)} {
    position: $_;
  }
}

#{_EACH_POS_((_LT_, _T_, _RT_))} {
  top: calc(var(--y) + var(--xy));
}

#{_EACH_POS_((_L_, _R_))} {
  top: 50%;
  transform: translate(0, -50%);
}

#{_EACH_POS_((_LB_, _B_, _RB_))} {
  bottom: calc(var(--y) + var(--xy));
}

#{_EACH_POS_((_LT_, _L_, _LB_))} {
  left: calc(var(--x) + var(--xy));
}

#{_EACH_POS_((_T_, _B_))} {
  left: 50%;
  transform: translate(-50%, 0);
}

#{_EACH_POS_((_RT_, _R_, _RB_))} {
  right: calc(var(--x) + var(--xy));
}

#{_EACH_POS_((_C_))} {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
