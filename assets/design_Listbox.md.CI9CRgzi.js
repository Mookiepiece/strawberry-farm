import{J as t,p as r,i,C as o,K as s,m as a,I as c,o as d}from"./chunks/framework.IAuM8QuA.js";const k=JSON.parse('{"title":"Listbox","description":"","frontmatter":{},"headers":[],"relativePath":"design/Listbox.md","filePath":"design/Listbox.md"}'),l={name:"design/Listbox.md"},n=s('<h1 id="listbox" tabindex="-1">Listbox <a class="header-anchor" href="#listbox" aria-label="Permalink to &quot;Listbox&quot;">​</a></h1><h2 id="spec" tabindex="-1">Spec <a class="header-anchor" href="#spec" aria-label="Permalink to &quot;Spec&quot;">​</a></h2><p><a href="https://www.w3.org/WAI/ARIA/apg/patterns/listbox/" target="_blank" rel="noreferrer">https://www.w3.org/WAI/ARIA/apg/patterns/listbox/</a></p><ul><li>Radio Group、 Checkbox Group 均使用 <code>[role=&quot;listbox&quot;]</code> 实现。，因为 <code>radio</code> 的 tabindex 向下代理难以管理，但坏处是，每次切换选项都需要使用 <code>IntersectionObserver</code> 以让当前项目出现在界面里。与之相对，<code>VTree</code> 则使用 tabindex 向下代理的模式。</li><li>聚焦时 （包括点击导致的）如果发现没匹配的选项值，会洗出第一个游标。</li><li>单选模式下且不设置可清空则游标的移动会导致自动改值，多选或可清空则只移动游标，不会改变值。</li><li>方向键移动游标，单选模式会在移动时自动选择，多选模式按空格或回车以选择。</li></ul><h2 id="elite" tabindex="-1">Elite <a class="header-anchor" href="#elite" aria-label="Permalink to &quot;Elite&quot;">​</a></h2><h3 id="radio-group" tabindex="-1">Radio Group <a class="header-anchor" href="#radio-group" aria-label="Permalink to &quot;Radio Group&quot;">​</a></h3>',6),h=a("h3",{id:"checkbox-group",tabindex:"-1"},[c("Checkbox Group "),a("a",{class:"header-anchor",href:"#checkbox-group","aria-label":'Permalink to "Checkbox Group"'},"​")],-1);function p(b,x,u,_,m,f){const e=r("VPDemo");return d(),i("div",null,[n,o(e,{path:"design/ListboxRadioGroup"}),h,o(e,{path:"design/ListboxCheckboxGroup"})])}const P=t(l,[["render",p]]);export{k as __pageData,P as default};
