var l=Object.defineProperty;var m=(e,t,r)=>t in e?l(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var i=(e,t,r)=>m(e,typeof t!="symbol"?t+"":t,r);class b extends HTMLElement{connectedCallback(){this.draw()}attributeChangedCallback(t){t==="k"&&this.draw()}draw(){const t=(this.getAttribute("k")||"").trim().split("+").flatMap((c,s,a)=>s<a.length-1?[c,"+"]:c),r=c=>{const s=(o,d)=>{const n=document.createElement("kbd");return n.append(o),d&&(n.className=d),n},a=(o,d)=>{const n=document.createElement("i-feather");n.setAttribute("i",o);const u=document.createElement("kbd");return u.append(n),u};switch(c.toLowerCase()){case"up":return a("arrow-up");case"down":return a("arrow-down");case"left":return a("arrow-left");case"right":return a("arrow-right");case"m0":return s("","m0");case"m1":return s("","m1");case"+":return"+";default:return s(c)}};this.replaceChildren(...t.map(r))}}i(b,"observedAttributes",["k"]);export{b as VPKbdElement};
