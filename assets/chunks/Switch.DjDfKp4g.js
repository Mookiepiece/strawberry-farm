import{d as p,A as S,B as v,f as h,o as l,j as n,r as w,i as V,a as m,e as k,t as _,p as B,a6 as r,a2 as d,y as u,Z as g}from"./framework.qiMOmzvi.js";import"./theme.CGULKHWn.js";const c=t=>{const e=t.closest("form");e&&([...e.querySelectorAll(':is(input,button)[type="submit"]')].every(a=>a.hasAttribute("disabled"))||e==null||e.requestSubmit())},M=["tabindex","aria-disabled","aria-pressed","onKeydown"],q={key:1},A=p({__name:"VSwitch",props:S({label:{},disabled:{type:Boolean}},{modelValue:{},modelModifiers:{}}),emits:["update:modelValue"],setup(t,{expose:e}){const a=v(t,"modelValue"),i=()=>a.value=!a.value,b=()=>g("div",{class:"VSwitchIndicator"}),f=h();return e({el:f}),(s,o)=>(l(),n("div",{tabindex:s.disabled?"-1":"0",class:"VSwitch",role:"button","aria-disabled":s.disabled,"aria-pressed":a.value?"true":"false",onClick:i,onKeydown:[o[0]||(o[0]=r(d((...y)=>u(c)&&u(c)(...y),["exact","prevent"]),["enter"])),r(d(i,["exact","prevent"]),["space"])]},[w(s.$slots,"default",{indicator:b},()=>[typeof s.label=="function"||V(s.label)?(l(),m(k(s.label),{key:0})):(l(),n("span",q,_(s.label),1)),o[1]||(o[1]=B("div",{class:"VSwitchIndicator"},null,-1))])],40,M))}}),D=p({__name:"Switch",setup(t){return(e,a)=>(l(),m(A,{label:"Speaker"}))}});export{D as default};
